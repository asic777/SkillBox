// Задание 3 (по желанию). Расчёт сдачи
// Что нужно сделать
// Напишите функцию, которая посчитает, сможет ли продавец в киоске обслужить всех покупателей. В киоске каждый лимонад стоит пять долларов. Клиенты стоят в очереди, чтобы купить у вас, и заказывают по одному лимонаду. Каждый покупатель может купить только один лимонад и заплатить купюрами номиналом 5, 10 или 20 долларов. Вы должны дать каждому покупателю сдачу с его купюры.

// Обратите внимание, что сначала у вас нет сдачи.

// Советы и рекомендации
// Сигнатура функции lemonadeChange(bills []int) bool,

// где bills — это купюры, которые мы получаем от покупателей, по одной купюре от каждого.

// Верните true, если вы можете предоставить каждому покупателю правильную сдачу.

// Пример 1

// Расчёт сдачи.
// Ввод: [5,5,5,10,20]
// Вывод: true
// Пояснение:

// От первых трёх клиентов мы собираем три купюры по 5 долларов по порядку.

// От четвёртого покупателя мы получаем купюру номиналом 10 долларов и возвращаем 5 долларов сдачи.

// От пятого клиента мы получаем 20 долларов и возвращаем купюры номиналом 10 и 5 долларов.

// Поскольку все клиенты получили правильную сдачу, мы выводим true.

// Пример 2

// Расчёт сдачи.
// Ввод: [10,10]
// Вывод: false
// Пояснение:

// Поскольку купюр в кассе нет, мы не можем дать сдачу первому покупателю.

// Пример 3

// Расчёт сдачи.
// Ввод: [5,5,10,10,20]
// Вывод: false
// Пояснение:

// От первых двух клиентов по порядку мы получаем две купюры по 5 долларов.

// Для следующих двух клиентов мы собираем купюры по 10 долларов и возвращаем 5 долларов третьему и четвёртому клиентам.

// Последнему покупателю мы не можем вернуть сдачу в размере 15 долларов, потому что у нас есть только две купюры по 10 долларов.

// Поскольку не все покупатели получили правильную сдачу, ответ — false.

package main

import "fmt"

func main() {
	fmt.Println("Задание 8.5.3. Проверка сдачи.")

	var numberBuyers int
	fmt.Print("Введите количество покупателей: ")
	fmt.Scan(&numberBuyers)

	billsBuyers := make([]int, numberBuyers)
	for i := 0; i < numberBuyers; i++ {
		fmt.Printf("Введите номинал купюры покупателя %v (5, 10, 20): ", i+1)
		fmt.Scan(&billsBuyers[i])
		if billsBuyers[i] != 5 && billsBuyers[i] != 10 && billsBuyers[i] != 20 {
			fmt.Println("Банкноты могут быть только 5, 10, 20 долларов")
			return
		}
	}

	fmt.Println(billsBuyers)
	fmt.Println(lemonadeChange(billsBuyers))
}

func lemonadeChange(bills []int) bool {

	billsFive := 0
	billsTen := 0

	for i := 0; i < len(bills); i++ {
		switch bills[i] {
		case 5:
			billsFive += 1
		case 10:
			{
				if billsFive > 0 {
					billsFive -= 1
				} else {
					return false
				}
				billsTen += 1
			}
		case 20:
			{
				if billsFive > 0 && billsTen > 0 {
					billsFive -= 1
					billsTen -= 1
				} else if billsFive > 1 {
					billsFive -= 2
				} else {
					return false
				}
			}
		}
	}

	return true
}
