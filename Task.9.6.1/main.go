// Задание 1. Переполнение
// Что нужно сделать
// В данном модуле мы рассмотрели примеры по целочисленным типам, их размерам в памяти и то, что происходит при её переполнении. Напишите программу, которая в цикле с использованием встроенных констант (на предельные значения целых чисел, в пакете math) будет подсчитывать, сколько приходится переполнений чисел типа uint8, uint16 в диапазоне от 0 до uint32.

// Советы и рекомендации
// Для нахождения количества переполнений используйте цикл. Воспользуйтесь константами максимальных значений из пакета math.

package main

import (
	"fmt"
	"math"
)

func main() {
	var (
		countOverFlowUint8  int = 0
		countOverFlowUint16 int = 0
	)

	for i := 1; i < math.MaxUint32; i++ {
		if uint8(i) == 0 {
			countOverFlowUint8++
		}
		if uint16(i) == 0 {
			countOverFlowUint16++
		}
	}

	fmt.Printf("Количество переполнений для типа данных uint8: %v\n", countOverFlowUint8)
	fmt.Printf("Количество переполнений для типа данных uint16: %v\n", countOverFlowUint16)
}
