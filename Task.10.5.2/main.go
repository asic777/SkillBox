// Задание 2. Проблемы округления процентов
// Что нужно сделать
// В связи с особенностями хранения дробных чисел они не очень подходят для хранения денежных значений (может потеряться значимая часть при переполнении, да и дробная часть больше двух знаков не нужна). Но мы попробуем решить задачу начисления процентов, используя именно их.
// Пусть пользователь вводит сумму, которую он кладёт в банк, ежемесячный процент капитализации и количество лет, в течение которых будет открыт вклад.
// Необходимо ежемесячно пересчитывать сумму, округляя её до целого количества копеек в меньшую сторону. Например, если после начисления процентов остаток включает 35,78 копейки, то оставляем только 35 копеек, а дробную часть отбрасываем.
// По окончании работы программы необходимо вывести, какую сумму получит вкладчик на руки и какая сумма будет зачислена в пользу банка за счёт округления копеек.
// Советы и рекомендации
// Для округления копеек можно умножить получившееся после капитализации процентов число на 100, округлить в меньшую сторону, затем поделить опять на 100. Отбрасываемую часть можно получить вычитанием текущего значения остатка на счёте и того, который был до округления.
// Для 1000 рублей, 1% и одного года программа должна вывести 1126,78 и 0,04350000000022192 (возможно меньше знаков).
// Для 1000 рублей, 1% и десяти лет программа должна вывести 3299,41 и 0,5216000000013992 (возможно меньше знаков).

package main

import (
	"fmt"
	"math"
)

func main() {
	var deposit, depositRound float64
	var percentagePerMonth float64
	var yearsInvestPeriod int
	var bankIncome, diffDeposit float64

	for {
		fmt.Print("Введите сумму депозита: ")
		fmt.Scan(&depositRound)
		if depositRound <= 0 {
			fmt.Printf("Введите положительное чиcло типа Float64\n")
		} else {
			break
		}
	}

	for {
		fmt.Print("Введите процентную ставку в месяц: ")
		fmt.Scan(&percentagePerMonth)
		if percentagePerMonth <= 0 {
			fmt.Printf("Введите положительное чиcло типа Float64\n")
		} else {
			break
		}
	}

	for {
		fmt.Print("Введите количество лет: ")
		fmt.Scan(&yearsInvestPeriod)
		if yearsInvestPeriod <= 0 {
			fmt.Printf("Введите чиcло в диапозоне от 0 до %v\n", math.MaxInt)
		} else {
			break
		}
	}

	monthsInvestPeriod := yearsInvestPeriod * 12
	percentagePerMonth /= 100

	for i := 1; i <= monthsInvestPeriod; i++ {
		deposit = depositRound + depositRound*percentagePerMonth
		depositRound = math.Trunc(deposit*100) / 100
		diffDeposit = deposit - depositRound
		bankIncome += diffDeposit
	}

	fmt.Printf("Ваш депозит: %f, доход банка за счет округления: %v", depositRound, bankIncome)

}
